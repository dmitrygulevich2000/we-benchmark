kamon {
  enable = "yes"
  influxdb {
    hostname = "influxdb"
    port = 8086
    database = "we"
  }
  environment-tags {
    include-service = no
    include-host = yes
    include-instance = no
    exclude = []
  }
}
metrics {
    enable = "yes"
}
node {
  synchronization {
    extension-batch-size = 100
  }
  waves-crypto = "yes"
  owner-address = "3NqTjZNugW79wpALQEq9WUytP4VbCTkJPeU"
  ntp {
    fatal-timeout = "5 minutes"
  }
  directory = "/node"
  data-directory = "/node/data"
  wallet {
    file = "/node/keystore.dat"
    password = "nq5AKYFkh-ajoMMJm8P9FQ"
  }
  blockchain {
    type = "CUSTOM"
    fees {
      enabled = false
    }
    consensus {
      type = "poa"
      round-duration = "5s"
      sync-duration = "3s"
      ban-duration-blocks = 100
      warnings-for-ban = 3
      max-bans-percentage = 40
    }
    custom {
      address-scheme-character = "V"
      functionality {
        feature-check-blocks-period = 2
        blocks-for-feature-activation = 1
        pre-activated-features {
          2 = 0
          3 = 0
          4 = 0
          5 = 0
          6 = 0
          7 = 0
          9 = 0
          10 = 0
          100 = 0
          101 = 0
        }
      }
      genesis {
        average-block-delay = "60s"
        initial-base-target = 153722867
        block-timestamp = 1714567428520
        initial-balance = 3000000000
        genesis-public-key-base-58 = "BCEJPATvMRQtikKP6gesRN5MSF6rJrHNFXah4mNBf66s"
        signature = "xdNEAtKHC1y8PDt6AznrhEoYzKpEDzBsA64RkvDneYZuVn1nKGT2cyr3hwA7rYEAdRj1FnKLPYoNsP7cggHsSMC"
        transactions = [
          {
            recipient = "3Nxnb2bodmLoAqS6ya9ZmhPpE5LD2rdvfHr"
            amount = 1000000000
          }
          {
            recipient = "3NqTjZNugW79wpALQEq9WUytP4VbCTkJPeU"
            amount = 1000000000
          }
          {
            recipient = "3NopUHbfdwfsT4KtnbcKCkAuDqpnuSsUdFp"
            amount = 1000000000
          }
        ]
        network-participants = [
          {
            public-key = "CgwWMad79EHdsMG5iwrfAXmryeVyM5331oM27c5H7H4S"
            roles = [
              "permissioner"
              "miner"
              "connection_manager"
              "contract_developer"
              "issuer"
            ]
          }
          {
            public-key = "13UXrkJohTbgQdLBSz63CHx1XspbGD1iXw3z5nLNTJwC"
            roles = [
              "permissioner"
              "connection_manager"
              "contract_developer"
              "issuer"
            ]
          }
          {
            public-key = "BLiaC5pxeSobKEuEvL5BzcuHnEoUBGX4kXPKV2YBoKEr"
            roles = [
              "permissioner"
              "connection_manager"
              "contract_developer"
              "issuer"
            ]
          }
        ]
      }
    }
  }
  logging-level = "DEBUG"
  tls {
    type = "DISABLED"
  }
  network {
    bind-address = "0.0.0.0"
    port = 6864
    tls = "no"
    known-peers = [
      "node-0:6864"
      "node-1:6864"
      "node-2:6864"
    ]
    node-name = "node-1"
    peers-data-residence-time = "2h"
    declared-address = "0.0.0.0:6864"
    attempt-connection-delay = "5s"
  }
  miner {
    enable = "yes"
    quorum = 0
    interval-after-last-block-then-generation-is-allowed = "10d"
    micro-block-interval = "3s"
    min-micro-block-age = "3s"
    max-transactions-in-micro-block = 6000
    minimal-block-generation-offset = "200ms"
  }
  api {
    rest {
      enable = "yes"
      bind-address = "0.0.0.0"
      port = 6862
      tls = "no"
    }
    grpc {
      enable = "yes"
      bind-address = "0.0.0.0"
      port = 6865
      tls = "no"
      akka-http-settings {
        akka {
          http {
            server {
              idle-timeout = "infinite"
            }
          }
        }
      }
    }
    auth {
      type = "api-key"
      api-key-hash = "AWUhyXUX6Jam852Gy1DibK7wYNXSMbhtDsKzribM6iLR"
      privacy-api-key-hash = "AWUhyXUX6Jam852Gy1DibK7wYNXSMbhtDsKzribM6iLR"
    }
  }
  privacy {
    crawling-parallelism = 100
    storage {
      vendor = "none"
    }
    cleaner {
      enabled = "no"
    }
  }
  docker-engine {
    enable = "yes"
    contracts-parallelism = 8
    use-node-docker-host = "yes"
    default-registry-domain = "registry.wavesenterprise.com/waves-enterprise-public"
    docker-host = "unix:///var/run/docker.sock"
    execution-limits {
      timeout = "10s"
      memory = 512
      memory-swap = 0
    }
    reuse-containers = "yes"
    remove-container-after = "1h"
    remote-registries = []
    check-registry-auth-on-startup = "yes"
    contract-execution-messages-cache {
      expire-after = "0s"
      max-buffer-size = 10
      max-buffer-time = "100ms"
    }
  }
}